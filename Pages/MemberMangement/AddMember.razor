@* @page "/addNewMember"
@using System.Net.Http
@using Membership_Management_UI.Models
@using Membership_Management_UI.Services
@inject HttpClient httpClient
@using Microsoft.AspNetCore.Components.Forms

<div class="container">
    <div class="row">
        <div class="col-lg-9">
            <h3>Add New Member</h3>
        </div>
        <div class="col-lg-3 text-right">
            <a href="/allMember" role="button" class="btn btn-secondary btn-sm">Back to List</a>
        </div>
    </div>

    <form @onsubmit="HandleValidSubmit" enctype="multipart/form-data">
        <div class="mt-4">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Name">Name:</label>
                        <input id="Name" @bind="member.Name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="Phone">Phone:</label>
                        <input id="Phone" @bind="member.Phone" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="PresentAddress">Present Address:</label>
                        <input id="PresentAddress" @bind="member.PresentAddress" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="PermanentAddress">Permanent Address:</label>
                        <input id="PermanentAddress" @bind="member.PermanentAddress" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="Dob">Date of Birth:</label>
                        <input type="date" id="Dob" @bind="member.Dob" class="form-control" min="1999-01-01" />
                    </div>


                    <div class="form-group">
                        <label for="ImageFile">Upload Image:</label>
                        <div class="custom-file">
                            <InputFile id="ImageFile" OnChange="@HandleFileSelected" class="custom-file-input" accept=".jpg,.jpeg,.png" />
                            <label class="custom-file-label" for="ImageFile"></label>
                        </div>
                    </div>
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary" disabled="@submitting">
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: @((submitting) ? "inline-block" : "none")"></span>
                        Submit
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>






@code {
    private Member member = new Member();
    private Document doc = new Document();
    private bool submitting = false;
    [Inject]
    private IMemberService service { get; set; }
    [Inject]
    private NavigationManager navigation { get; set; }

    private async Task HandleValidSubmit()
    {
        submitting = true;
        await service.AddMember(member);
        navigation.NavigateTo("/allMember");
        submitting = false;
    }


    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        member.ImageFile = file;
    }


}
 *@


@page "/addNewMember"
@using System.Net.Http
@using Membership_Management_UI.Models
@using Membership_Management_UI.Services
@inject HttpClient httpClient
@using Microsoft.AspNetCore.Components.Forms

<div class="container">
    <div class="row">
        <div class="col-lg-9">
            <h3>Add New Member</h3>
        </div>
        <div class="col-lg-3 text-right">
            <a href="/allMember" role="button" class="btn btn-secondary btn-sm">Back to List</a>
        </div>
    </div>

    <form @onsubmit="HandleValidSubmit" enctype="multipart/form-data">
        <div class="mt-4">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Name">Name:</label>
                        <input id="Name" @bind="member.Name" class="form-control" />
                        @if (string.IsNullOrWhiteSpace(member.Name))
                        {
                            <p class="text-danger">Name is required.</p>
                        }
                    </div>
                    <div class="form-group">
                        <label for="Phone">Phone:</label>
                        <input id="Phone" @bind="member.Phone" class="form-control" />
                        @if (string.IsNullOrWhiteSpace(member.Phone.ToString()))
                        {
                            <p class="text-danger">Phone is required.</p>
                        }
                    </div>
                    <div class="form-group">
                        <label for="PresentAddress">Present Address:</label>
                        <input id="PresentAddress" @bind="member.PresentAddress" class="form-control" />
                        @if (string.IsNullOrWhiteSpace(member.PresentAddress))
                        {
                            <p class="text-danger">Present Address is required.</p>
                        }
                    </div>
                    <div class="form-group">
                        <label for="PermanentAddress">Permanent Address:</label>
                        <input id="PermanentAddress" @bind="member.PermanentAddress" class="form-control" />
                        @if (string.IsNullOrWhiteSpace(member.PermanentAddress))
                        {
                            <p class="text-danger">Permanent Address is required.</p>
                        }
                    </div>
                    <div class="form-group">
                        <label for="Dob">Date of Birth:</label>
                        <input type="date" id="Dob" @bind="member.Dob" class="form-control" max="2000-01-01" />
                        @if (member.Dob > new DateTime(2000, 1, 1))
                        {
                            <p class="text-danger">Date of Birth should be before 2000-01-01.</p>
                        }


                    </div>
                    <div class="form-group">
                        <label for="ImageFile">Upload Image:</label>
                        <div class="custom-file">
                            <InputFile id="ImageFile" OnChange="@HandleFileSelected" class="custom-file-input" accept=".jpg,.jpeg,.png" />
                            <label class="custom-file-label" for="ImageFile"></label>
                        </div>
                    </div>
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary">
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: @((submitting) ? "inline-block" : "none")"></span>
                        Submit
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

@code {
    private Member member = new Member();
    private bool submitting = false;
    [Inject]
    private IMemberService service { get; set; }
    [Inject]
    private NavigationManager navigation { get; set; }

    private async Task HandleValidSubmit()
    {
        if (string.IsNullOrWhiteSpace(member.Name) || string.IsNullOrWhiteSpace(member.Phone.ToString()) ||
            string.IsNullOrWhiteSpace(member.PresentAddress) || string.IsNullOrWhiteSpace(member.PermanentAddress))
        {
            return;
        }
        if (member.Dob > new DateTime(2000, 1, 1))
        {
            return;
        }


        submitting = true;
        await service.AddMember(member);
        navigation.NavigateTo("/allMember");
        submitting = false;
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        member.ImageFile = file;
    }
}
